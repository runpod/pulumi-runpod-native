// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package runpod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/runpod/pulumi-runpod-native/sdk/go/runpod/internal"
)

var _ = internal.GetEnvOrDefault

type EndpointType struct {
	GpuIds          string `pulumi:"gpuIds"`
	Id              string `pulumi:"id"`
	IdleTimeout     int    `pulumi:"idleTimeout"`
	Locations       string `pulumi:"locations"`
	Name            string `pulumi:"name"`
	NetworkVolumeId string `pulumi:"networkVolumeId"`
	ScalerType      string `pulumi:"scalerType"`
	ScalerValue     int    `pulumi:"scalerValue"`
	TemplateId      string `pulumi:"templateId"`
	WorkersMax      int    `pulumi:"workersMax"`
	WorkersMin      int    `pulumi:"workersMin"`
}

type EndpointTypeOutput struct{ *pulumi.OutputState }

func (EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (o EndpointTypeOutput) ToEndpointTypeOutput() EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) GpuIds() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.GpuIds }).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.Id }).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) IdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointType) int { return v.IdleTimeout }).(pulumi.IntOutput)
}

func (o EndpointTypeOutput) Locations() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.Locations }).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.Name }).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) NetworkVolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.NetworkVolumeId }).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) ScalerType() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.ScalerType }).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) ScalerValue() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointType) int { return v.ScalerValue }).(pulumi.IntOutput)
}

func (o EndpointTypeOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.TemplateId }).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) WorkersMax() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointType) int { return v.WorkersMax }).(pulumi.IntOutput)
}

func (o EndpointTypeOutput) WorkersMin() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointType) int { return v.WorkersMin }).(pulumi.IntOutput)
}

type PodEnv struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PodEnvInput is an input type that accepts PodEnvArgs and PodEnvOutput values.
// You can construct a concrete instance of `PodEnvInput` via:
//
//	PodEnvArgs{...}
type PodEnvInput interface {
	pulumi.Input

	ToPodEnvOutput() PodEnvOutput
	ToPodEnvOutputWithContext(context.Context) PodEnvOutput
}

type PodEnvArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PodEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PodEnv)(nil)).Elem()
}

func (i PodEnvArgs) ToPodEnvOutput() PodEnvOutput {
	return i.ToPodEnvOutputWithContext(context.Background())
}

func (i PodEnvArgs) ToPodEnvOutputWithContext(ctx context.Context) PodEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodEnvOutput)
}

// PodEnvArrayInput is an input type that accepts PodEnvArray and PodEnvArrayOutput values.
// You can construct a concrete instance of `PodEnvArrayInput` via:
//
//	PodEnvArray{ PodEnvArgs{...} }
type PodEnvArrayInput interface {
	pulumi.Input

	ToPodEnvArrayOutput() PodEnvArrayOutput
	ToPodEnvArrayOutputWithContext(context.Context) PodEnvArrayOutput
}

type PodEnvArray []PodEnvInput

func (PodEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PodEnv)(nil)).Elem()
}

func (i PodEnvArray) ToPodEnvArrayOutput() PodEnvArrayOutput {
	return i.ToPodEnvArrayOutputWithContext(context.Background())
}

func (i PodEnvArray) ToPodEnvArrayOutputWithContext(ctx context.Context) PodEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodEnvArrayOutput)
}

type PodEnvOutput struct{ *pulumi.OutputState }

func (PodEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PodEnv)(nil)).Elem()
}

func (o PodEnvOutput) ToPodEnvOutput() PodEnvOutput {
	return o
}

func (o PodEnvOutput) ToPodEnvOutputWithContext(ctx context.Context) PodEnvOutput {
	return o
}

func (o PodEnvOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PodEnv) string { return v.Key }).(pulumi.StringOutput)
}

func (o PodEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PodEnv) string { return v.Value }).(pulumi.StringOutput)
}

type PodEnvArrayOutput struct{ *pulumi.OutputState }

func (PodEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PodEnv)(nil)).Elem()
}

func (o PodEnvArrayOutput) ToPodEnvArrayOutput() PodEnvArrayOutput {
	return o
}

func (o PodEnvArrayOutput) ToPodEnvArrayOutputWithContext(ctx context.Context) PodEnvArrayOutput {
	return o
}

func (o PodEnvArrayOutput) Index(i pulumi.IntInput) PodEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PodEnv {
		return vs[0].([]PodEnv)[vs[1].(int)]
	}).(PodEnvOutput)
}

type TemplateType struct {
	AdvancedStart           bool     `pulumi:"advancedStart"`
	BoundEndpointId         string   `pulumi:"boundEndpointId"`
	Category                string   `pulumi:"category"`
	ContainerDiskInGb       int      `pulumi:"containerDiskInGb"`
	ContainerRegistryAuthId string   `pulumi:"containerRegistryAuthId"`
	DockerArgs              string   `pulumi:"dockerArgs"`
	Earned                  float64  `pulumi:"earned"`
	Env                     []PodEnv `pulumi:"env"`
	Id                      string   `pulumi:"id"`
	ImageName               string   `pulumi:"imageName"`
	IsPublic                bool     `pulumi:"isPublic"`
	IsRunpod                bool     `pulumi:"isRunpod"`
	IsServerless            bool     `pulumi:"isServerless"`
	Name                    string   `pulumi:"name"`
	Ports                   string   `pulumi:"ports"`
	Readme                  string   `pulumi:"readme"`
	RuntimeInMin            int      `pulumi:"runtimeInMin"`
	StartJupyter            bool     `pulumi:"startJupyter"`
	StartScript             string   `pulumi:"startScript"`
	StartSsh                bool     `pulumi:"startSsh"`
	VolumeInGb              int      `pulumi:"volumeInGb"`
	VolumeMountPath         string   `pulumi:"volumeMountPath"`
}

type TemplateTypeOutput struct{ *pulumi.OutputState }

func (TemplateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateType)(nil)).Elem()
}

func (o TemplateTypeOutput) ToTemplateTypeOutput() TemplateTypeOutput {
	return o
}

func (o TemplateTypeOutput) ToTemplateTypeOutputWithContext(ctx context.Context) TemplateTypeOutput {
	return o
}

func (o TemplateTypeOutput) AdvancedStart() pulumi.BoolOutput {
	return o.ApplyT(func(v TemplateType) bool { return v.AdvancedStart }).(pulumi.BoolOutput)
}

func (o TemplateTypeOutput) BoundEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.BoundEndpointId }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.Category }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) ContainerDiskInGb() pulumi.IntOutput {
	return o.ApplyT(func(v TemplateType) int { return v.ContainerDiskInGb }).(pulumi.IntOutput)
}

func (o TemplateTypeOutput) ContainerRegistryAuthId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.ContainerRegistryAuthId }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) DockerArgs() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.DockerArgs }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) Earned() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateType) float64 { return v.Earned }).(pulumi.Float64Output)
}

func (o TemplateTypeOutput) Env() PodEnvArrayOutput {
	return o.ApplyT(func(v TemplateType) []PodEnv { return v.Env }).(PodEnvArrayOutput)
}

func (o TemplateTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.Id }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v TemplateType) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

func (o TemplateTypeOutput) IsRunpod() pulumi.BoolOutput {
	return o.ApplyT(func(v TemplateType) bool { return v.IsRunpod }).(pulumi.BoolOutput)
}

func (o TemplateTypeOutput) IsServerless() pulumi.BoolOutput {
	return o.ApplyT(func(v TemplateType) bool { return v.IsServerless }).(pulumi.BoolOutput)
}

func (o TemplateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.Name }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) Ports() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.Ports }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) Readme() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.Readme }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) RuntimeInMin() pulumi.IntOutput {
	return o.ApplyT(func(v TemplateType) int { return v.RuntimeInMin }).(pulumi.IntOutput)
}

func (o TemplateTypeOutput) StartJupyter() pulumi.BoolOutput {
	return o.ApplyT(func(v TemplateType) bool { return v.StartJupyter }).(pulumi.BoolOutput)
}

func (o TemplateTypeOutput) StartScript() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.StartScript }).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) StartSsh() pulumi.BoolOutput {
	return o.ApplyT(func(v TemplateType) bool { return v.StartSsh }).(pulumi.BoolOutput)
}

func (o TemplateTypeOutput) VolumeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v TemplateType) int { return v.VolumeInGb }).(pulumi.IntOutput)
}

func (o TemplateTypeOutput) VolumeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateType) string { return v.VolumeMountPath }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PodEnvInput)(nil)).Elem(), PodEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodEnvArrayInput)(nil)).Elem(), PodEnvArray{})
	pulumi.RegisterOutputType(EndpointTypeOutput{})
	pulumi.RegisterOutputType(PodEnvOutput{})
	pulumi.RegisterOutputType(PodEnvArrayOutput{})
	pulumi.RegisterOutputType(TemplateTypeOutput{})
}
