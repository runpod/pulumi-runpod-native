// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package runpod

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/runpod/pulumi-runpod-native/sdk/go/runpod/internal"
)

type Pod struct {
	pulumi.CustomResourceState

	AiApiId           pulumi.StringPtrOutput    `pulumi:"aiApiId"`
	CloudType         pulumi.StringPtrOutput    `pulumi:"cloudType"`
	ContainerDiskInGb pulumi.IntPtrOutput       `pulumi:"containerDiskInGb"`
	CountryCode       pulumi.StringPtrOutput    `pulumi:"countryCode"`
	CudaVersion       pulumi.StringPtrOutput    `pulumi:"cudaVersion"`
	DataCenterId      pulumi.StringPtrOutput    `pulumi:"dataCenterId"`
	DeployCost        pulumi.Float64PtrOutput   `pulumi:"deployCost"`
	DockerArgs        pulumi.StringPtrOutput    `pulumi:"dockerArgs"`
	Env               PodEnvArrayOutput         `pulumi:"env"`
	GpuCount          pulumi.IntOutput          `pulumi:"gpuCount"`
	GpuTypeId         pulumi.StringOutput       `pulumi:"gpuTypeId"`
	GpuTypeIdList     pulumi.StringArrayOutput  `pulumi:"gpuTypeIdList"`
	ImageName         pulumi.StringOutput       `pulumi:"imageName"`
	MinDisk           pulumi.IntPtrOutput       `pulumi:"minDisk"`
	MinDownload       pulumi.IntPtrOutput       `pulumi:"minDownload"`
	MinMemoryInGb     pulumi.IntPtrOutput       `pulumi:"minMemoryInGb"`
	MinUpload         pulumi.IntPtrOutput       `pulumi:"minUpload"`
	MinVcpuCount      pulumi.IntPtrOutput       `pulumi:"minVcpuCount"`
	Name              pulumi.StringPtrOutput    `pulumi:"name"`
	NetworkVolumeId   pulumi.StringPtrOutput    `pulumi:"networkVolumeId"`
	Pod               PodTypeOutput             `pulumi:"pod"`
	Port              pulumi.IntPtrOutput       `pulumi:"port"`
	Ports             pulumi.StringPtrOutput    `pulumi:"ports"`
	SavingsPlan       SavingsPlanInputPtrOutput `pulumi:"savingsPlan"`
	StartJupyter      pulumi.BoolPtrOutput      `pulumi:"startJupyter"`
	StartSsh          pulumi.BoolPtrOutput      `pulumi:"startSsh"`
	StopAfter         pulumi.StringPtrOutput    `pulumi:"stopAfter"`
	SupportPublicIp   pulumi.BoolPtrOutput      `pulumi:"supportPublicIp"`
	TemplateId        pulumi.StringPtrOutput    `pulumi:"templateId"`
	TerminateAfter    pulumi.StringPtrOutput    `pulumi:"terminateAfter"`
	VolumeInGb        pulumi.IntPtrOutput       `pulumi:"volumeInGb"`
	VolumeKey         pulumi.StringPtrOutput    `pulumi:"volumeKey"`
	VolumeMountPath   pulumi.StringPtrOutput    `pulumi:"volumeMountPath"`
}

// NewPod registers a new resource with the given unique name, arguments, and options.
func NewPod(ctx *pulumi.Context,
	name string, args *PodArgs, opts ...pulumi.ResourceOption) (*Pod, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GpuCount == nil {
		return nil, errors.New("invalid value for required argument 'GpuCount'")
	}
	if args.GpuTypeId == nil {
		return nil, errors.New("invalid value for required argument 'GpuTypeId'")
	}
	if args.ImageName == nil {
		return nil, errors.New("invalid value for required argument 'ImageName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Pod
	err := ctx.RegisterResource("runpod:index:Pod", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPod gets an existing Pod resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPod(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodState, opts ...pulumi.ResourceOption) (*Pod, error) {
	var resource Pod
	err := ctx.ReadResource("runpod:index:Pod", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pod resources.
type podState struct {
}

type PodState struct {
}

func (PodState) ElementType() reflect.Type {
	return reflect.TypeOf((*podState)(nil)).Elem()
}

type podArgs struct {
	AiApiId           *string           `pulumi:"aiApiId"`
	CloudType         *string           `pulumi:"cloudType"`
	ContainerDiskInGb *int              `pulumi:"containerDiskInGb"`
	CountryCode       *string           `pulumi:"countryCode"`
	CudaVersion       *string           `pulumi:"cudaVersion"`
	DataCenterId      *string           `pulumi:"dataCenterId"`
	DeployCost        *float64          `pulumi:"deployCost"`
	DockerArgs        *string           `pulumi:"dockerArgs"`
	Env               []PodEnv          `pulumi:"env"`
	GpuCount          int               `pulumi:"gpuCount"`
	GpuTypeId         string            `pulumi:"gpuTypeId"`
	GpuTypeIdList     []string          `pulumi:"gpuTypeIdList"`
	ImageName         string            `pulumi:"imageName"`
	MinDisk           *int              `pulumi:"minDisk"`
	MinDownload       *int              `pulumi:"minDownload"`
	MinMemoryInGb     *int              `pulumi:"minMemoryInGb"`
	MinUpload         *int              `pulumi:"minUpload"`
	MinVcpuCount      *int              `pulumi:"minVcpuCount"`
	Name              *string           `pulumi:"name"`
	NetworkVolumeId   *string           `pulumi:"networkVolumeId"`
	Port              *int              `pulumi:"port"`
	Ports             *string           `pulumi:"ports"`
	SavingsPlan       *SavingsPlanInput `pulumi:"savingsPlan"`
	StartJupyter      *bool             `pulumi:"startJupyter"`
	StartSsh          *bool             `pulumi:"startSsh"`
	StopAfter         *string           `pulumi:"stopAfter"`
	SupportPublicIp   *bool             `pulumi:"supportPublicIp"`
	TemplateId        *string           `pulumi:"templateId"`
	TerminateAfter    *string           `pulumi:"terminateAfter"`
	VolumeInGb        *int              `pulumi:"volumeInGb"`
	VolumeKey         *string           `pulumi:"volumeKey"`
	VolumeMountPath   *string           `pulumi:"volumeMountPath"`
}

// The set of arguments for constructing a Pod resource.
type PodArgs struct {
	AiApiId           pulumi.StringPtrInput
	CloudType         pulumi.StringPtrInput
	ContainerDiskInGb pulumi.IntPtrInput
	CountryCode       pulumi.StringPtrInput
	CudaVersion       pulumi.StringPtrInput
	DataCenterId      pulumi.StringPtrInput
	DeployCost        pulumi.Float64PtrInput
	DockerArgs        pulumi.StringPtrInput
	Env               PodEnvArrayInput
	GpuCount          pulumi.IntInput
	GpuTypeId         pulumi.StringInput
	GpuTypeIdList     pulumi.StringArrayInput
	ImageName         pulumi.StringInput
	MinDisk           pulumi.IntPtrInput
	MinDownload       pulumi.IntPtrInput
	MinMemoryInGb     pulumi.IntPtrInput
	MinUpload         pulumi.IntPtrInput
	MinVcpuCount      pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	NetworkVolumeId   pulumi.StringPtrInput
	Port              pulumi.IntPtrInput
	Ports             pulumi.StringPtrInput
	SavingsPlan       SavingsPlanInputPtrInput
	StartJupyter      pulumi.BoolPtrInput
	StartSsh          pulumi.BoolPtrInput
	StopAfter         pulumi.StringPtrInput
	SupportPublicIp   pulumi.BoolPtrInput
	TemplateId        pulumi.StringPtrInput
	TerminateAfter    pulumi.StringPtrInput
	VolumeInGb        pulumi.IntPtrInput
	VolumeKey         pulumi.StringPtrInput
	VolumeMountPath   pulumi.StringPtrInput
}

func (PodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podArgs)(nil)).Elem()
}

type PodInput interface {
	pulumi.Input

	ToPodOutput() PodOutput
	ToPodOutputWithContext(ctx context.Context) PodOutput
}

func (*Pod) ElementType() reflect.Type {
	return reflect.TypeOf((**Pod)(nil)).Elem()
}

func (i *Pod) ToPodOutput() PodOutput {
	return i.ToPodOutputWithContext(context.Background())
}

func (i *Pod) ToPodOutputWithContext(ctx context.Context) PodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodOutput)
}

// PodArrayInput is an input type that accepts PodArray and PodArrayOutput values.
// You can construct a concrete instance of `PodArrayInput` via:
//
//	PodArray{ PodArgs{...} }
type PodArrayInput interface {
	pulumi.Input

	ToPodArrayOutput() PodArrayOutput
	ToPodArrayOutputWithContext(context.Context) PodArrayOutput
}

type PodArray []PodInput

func (PodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Pod)(nil)).Elem()
}

func (i PodArray) ToPodArrayOutput() PodArrayOutput {
	return i.ToPodArrayOutputWithContext(context.Background())
}

func (i PodArray) ToPodArrayOutputWithContext(ctx context.Context) PodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodArrayOutput)
}

// PodMapInput is an input type that accepts PodMap and PodMapOutput values.
// You can construct a concrete instance of `PodMapInput` via:
//
//	PodMap{ "key": PodArgs{...} }
type PodMapInput interface {
	pulumi.Input

	ToPodMapOutput() PodMapOutput
	ToPodMapOutputWithContext(context.Context) PodMapOutput
}

type PodMap map[string]PodInput

func (PodMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Pod)(nil)).Elem()
}

func (i PodMap) ToPodMapOutput() PodMapOutput {
	return i.ToPodMapOutputWithContext(context.Background())
}

func (i PodMap) ToPodMapOutputWithContext(ctx context.Context) PodMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodMapOutput)
}

type PodOutput struct{ *pulumi.OutputState }

func (PodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Pod)(nil)).Elem()
}

func (o PodOutput) ToPodOutput() PodOutput {
	return o
}

func (o PodOutput) ToPodOutputWithContext(ctx context.Context) PodOutput {
	return o
}

func (o PodOutput) AiApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.AiApiId }).(pulumi.StringPtrOutput)
}

func (o PodOutput) CloudType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.CloudType }).(pulumi.StringPtrOutput)
}

func (o PodOutput) ContainerDiskInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntPtrOutput { return v.ContainerDiskInGb }).(pulumi.IntPtrOutput)
}

func (o PodOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.CountryCode }).(pulumi.StringPtrOutput)
}

func (o PodOutput) CudaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.CudaVersion }).(pulumi.StringPtrOutput)
}

func (o PodOutput) DataCenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.DataCenterId }).(pulumi.StringPtrOutput)
}

func (o PodOutput) DeployCost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.Float64PtrOutput { return v.DeployCost }).(pulumi.Float64PtrOutput)
}

func (o PodOutput) DockerArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.DockerArgs }).(pulumi.StringPtrOutput)
}

func (o PodOutput) Env() PodEnvArrayOutput {
	return o.ApplyT(func(v *Pod) PodEnvArrayOutput { return v.Env }).(PodEnvArrayOutput)
}

func (o PodOutput) GpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntOutput { return v.GpuCount }).(pulumi.IntOutput)
}

func (o PodOutput) GpuTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringOutput { return v.GpuTypeId }).(pulumi.StringOutput)
}

func (o PodOutput) GpuTypeIdList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringArrayOutput { return v.GpuTypeIdList }).(pulumi.StringArrayOutput)
}

func (o PodOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringOutput { return v.ImageName }).(pulumi.StringOutput)
}

func (o PodOutput) MinDisk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntPtrOutput { return v.MinDisk }).(pulumi.IntPtrOutput)
}

func (o PodOutput) MinDownload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntPtrOutput { return v.MinDownload }).(pulumi.IntPtrOutput)
}

func (o PodOutput) MinMemoryInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntPtrOutput { return v.MinMemoryInGb }).(pulumi.IntPtrOutput)
}

func (o PodOutput) MinUpload() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntPtrOutput { return v.MinUpload }).(pulumi.IntPtrOutput)
}

func (o PodOutput) MinVcpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntPtrOutput { return v.MinVcpuCount }).(pulumi.IntPtrOutput)
}

func (o PodOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PodOutput) NetworkVolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.NetworkVolumeId }).(pulumi.StringPtrOutput)
}

func (o PodOutput) Pod() PodTypeOutput {
	return o.ApplyT(func(v *Pod) PodTypeOutput { return v.Pod }).(PodTypeOutput)
}

func (o PodOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

func (o PodOutput) Ports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.Ports }).(pulumi.StringPtrOutput)
}

func (o PodOutput) SavingsPlan() SavingsPlanInputPtrOutput {
	return o.ApplyT(func(v *Pod) SavingsPlanInputPtrOutput { return v.SavingsPlan }).(SavingsPlanInputPtrOutput)
}

func (o PodOutput) StartJupyter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.BoolPtrOutput { return v.StartJupyter }).(pulumi.BoolPtrOutput)
}

func (o PodOutput) StartSsh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.BoolPtrOutput { return v.StartSsh }).(pulumi.BoolPtrOutput)
}

func (o PodOutput) StopAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.StopAfter }).(pulumi.StringPtrOutput)
}

func (o PodOutput) SupportPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.BoolPtrOutput { return v.SupportPublicIp }).(pulumi.BoolPtrOutput)
}

func (o PodOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.TemplateId }).(pulumi.StringPtrOutput)
}

func (o PodOutput) TerminateAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.TerminateAfter }).(pulumi.StringPtrOutput)
}

func (o PodOutput) VolumeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.IntPtrOutput { return v.VolumeInGb }).(pulumi.IntPtrOutput)
}

func (o PodOutput) VolumeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.VolumeKey }).(pulumi.StringPtrOutput)
}

func (o PodOutput) VolumeMountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Pod) pulumi.StringPtrOutput { return v.VolumeMountPath }).(pulumi.StringPtrOutput)
}

type PodArrayOutput struct{ *pulumi.OutputState }

func (PodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Pod)(nil)).Elem()
}

func (o PodArrayOutput) ToPodArrayOutput() PodArrayOutput {
	return o
}

func (o PodArrayOutput) ToPodArrayOutputWithContext(ctx context.Context) PodArrayOutput {
	return o
}

func (o PodArrayOutput) Index(i pulumi.IntInput) PodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Pod {
		return vs[0].([]*Pod)[vs[1].(int)]
	}).(PodOutput)
}

type PodMapOutput struct{ *pulumi.OutputState }

func (PodMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Pod)(nil)).Elem()
}

func (o PodMapOutput) ToPodMapOutput() PodMapOutput {
	return o
}

func (o PodMapOutput) ToPodMapOutputWithContext(ctx context.Context) PodMapOutput {
	return o
}

func (o PodMapOutput) MapIndex(k pulumi.StringInput) PodOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Pod {
		return vs[0].(map[string]*Pod)[vs[1].(string)]
	}).(PodOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PodInput)(nil)).Elem(), &Pod{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodArrayInput)(nil)).Elem(), PodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodMapInput)(nil)).Elem(), PodMap{})
	pulumi.RegisterOutputType(PodOutput{})
	pulumi.RegisterOutputType(PodArrayOutput{})
	pulumi.RegisterOutputType(PodMapOutput{})
}
